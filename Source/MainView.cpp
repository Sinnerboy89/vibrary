/*
  ==============================================================================

  This is an automatically generated GUI class created by the Projucer!

  Be careful when adding custom code to these files, as only the code within
  the "//[xyz]" and "//[/xyz]" sections will be retained when the file is loaded
  and re-saved.

  Created with Projucer version: 5.4.4

  ------------------------------------------------------------------------------

  The Projucer is part of the JUCE library.
  Copyright (c) 2017 - ROLI Ltd.

  ==============================================================================
*/

//[Headers] You can add your own extra header files here...
/*
  ==============================================================================

   Copyright 2020 Art+Logic, Inc.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

  ==============================================================================
*/

#include <thread>
#include <vector>

#include "CommandMessages.h"
#include "FileListView.h"
#include "Paths.h"
#include "Persistence.h"
#include "Spectrogram.h"
#include "SettingsView.h"
#include "TrainingManager.h"
#include "TrainingView.h"

//[/Headers]

#include "MainView.h"


//[MiscUserDefs] You can add your own user definitions and misc code here...
//[/MiscUserDefs]

//==============================================================================
MainView::MainView ()
{
    //[Constructor_pre] You can add your own custom stuff here..
    //[/Constructor_pre]

    fContentView.reset (new Component());
    addAndMakeVisible (fContentView.get());
    fContentView->setName ("content view");

    fSortButton.reset (new ImageButton ("sort button"));
    addAndMakeVisible (fSortButton.get());
    fSortButton->setTooltip (TRANS("Sort"));
    fSortButton->setButtonText (TRANS("Sort"));
    fSortButton->setRadioGroupId (1);
    fSortButton->addListener (this);

    fSortButton->setImages (false, true, true,
                            ImageCache::getFromMemory (naviconfolder_png, naviconfolder_pngSize), 1.000f, Colour (0x00000000),
                            Image(), 1.000f, Colour (0x00000000),
                            ImageCache::getFromMemory (naviconfolderselected_png, naviconfolderselected_pngSize), 1.000f, Colour (0x00000000));
    fSettingsButton.reset (new ImageButton ("settings button"));
    addAndMakeVisible (fSettingsButton.get());
    fSettingsButton->setTooltip (TRANS("Settings"));
    fSettingsButton->setButtonText (String());
    fSettingsButton->setRadioGroupId (1);
    fSettingsButton->addListener (this);

    fSettingsButton->setImages (false, true, true,
                                ImageCache::getFromMemory (naviconsettings_png, naviconsettings_pngSize), 1.000f, Colour (0x00000000),
                                Image(), 1.000f, Colour (0x00000000),
                                ImageCache::getFromMemory (naviconsettingsselected_png, naviconsettingsselected_pngSize), 1.000f, Colour (0x00000000));
    fTrainButton.reset (new ImageButton ("train button"));
    addAndMakeVisible (fTrainButton.get());
    fTrainButton->setTooltip (TRANS("Train"));
    fTrainButton->setButtonText (String());
    fTrainButton->setRadioGroupId (1);
    fTrainButton->addListener (this);

    fTrainButton->setImages (false, true, true,
                             ImageCache::getFromMemory (navicontrain_png, navicontrain_pngSize), 1.000f, Colour (0x00000000),
                             Image(), 1.000f, Colour (0x00000000),
                             ImageCache::getFromMemory (navicontrainselected_png, navicontrainselected_pngSize), 1.000f, Colour (0x00000000));
    drawable1 = Drawable::createFromImageData (BinaryData::background_png, BinaryData::background_pngSize);
    drawable2 = Drawable::createFromImageData (BinaryData::logovibrary_png, BinaryData::logovibrary_pngSize);

    //[UserPreSize]

   fSortButton->setClickingTogglesState(true);
   fTrainButton->setClickingTogglesState(true);
   fSettingsButton->setClickingTogglesState(true);

    //[/UserPreSize]

    setSize (830, 700);


    //[Constructor] You can add your own custom stuff here..

   this->setFocusContainer(true);
   fSortButton->setToggleState(true, sendNotification);

   std::thread([this]()
   {
      if (ATrainingManager::HandleIfFailedTraining())
      {
         this->postCommandMessage(Training::kSortFileAdded);
      }
   }).detach(); // $$$: GSL says don't use detach this way

    //[/Constructor]
}

MainView::~MainView()
{
    //[Destructor_pre]. You can add your own custom destruction code here..

   this->PrepareToLeaveView();

    //[/Destructor_pre]

    fContentView = nullptr;
    fSortButton = nullptr;
    fSettingsButton = nullptr;
    fTrainButton = nullptr;
    drawable1 = nullptr;
    drawable2 = nullptr;


    //[Destructor]. You can add your own custom destruction code here..

   // TODO: Manage static data by letting classes register their cleanup routines.
   // Better yet use Juce's static resource pointer
   Persist::CleanUp();
   ASpectrogram::CleanUp();

    //[/Destructor]
}

//==============================================================================
void MainView::paint (Graphics& g)
{
    //[UserPrePaint] Add your own custom painting code here..
    //[/UserPrePaint]

    {
        int x = 0, y = 0, width = proportionOfWidth (1.0000f), height = proportionOfHeight (1.0000f);
        //[UserPaintCustomArguments] Customize the painting arguments here..
        //[/UserPaintCustomArguments]
        g.setColour (Colours::black);
        jassert (drawable1 != 0);
        if (drawable1 != 0)
            drawable1->drawWithin (g, Rectangle<float> (x, y, width, height),
                                   RectanglePlacement::stretchToFit, 1.000f);
    }

    {
        int x = 31, y = 17, width = 190, height = 64;
        //[UserPaintCustomArguments] Customize the painting arguments here..
        //[/UserPaintCustomArguments]
        g.setColour (Colours::black);
        jassert (drawable2 != 0);
        if (drawable2 != 0)
            drawable2->drawWithin (g, Rectangle<float> (x, y, width, height),
                                   RectanglePlacement::centred, 1.000f);
    }

    //[UserPaint] Add your own custom painting code here..
    //[/UserPaint]
}

void MainView::resized()
{
    //[UserPreResize] Add your own custom resize code here..

    //[/UserPreResize]

    fContentView->setBounds (20, 90, getWidth() - 40, getHeight() - 106);
    fSortButton->setBounds (((getWidth() - 28 - 38) + -14 - 38) + -14 - 38, 26, 38, 38);
    fSettingsButton->setBounds (getWidth() - 28 - 38, 26, 38, 38);
    fTrainButton->setBounds ((getWidth() - 28 - 38) + -14 - 38, 26, 38, 38);
    //[UserResized] Add your own custom resize handling here..
    //[/UserResized]
}

void MainView::buttonClicked (Button* buttonThatWasClicked)
{
    //[UserbuttonClicked_Pre]
    //[/UserbuttonClicked_Pre]

    if (buttonThatWasClicked == fSortButton.get())
    {
        //[UserButtonCode_fSortButton] -- add your button handler code here..
       if (buttonThatWasClicked->getToggleState())
       {
          this->ShowContents(kFileListView);
       }
        //[/UserButtonCode_fSortButton]
    }
    else if (buttonThatWasClicked == fSettingsButton.get())
    {
        //[UserButtonCode_fSettingsButton] -- add your button handler code here..
       if (buttonThatWasClicked->getToggleState())
       {
          this->ShowContents(kSettingsView);
       }
        //[/UserButtonCode_fSettingsButton]
    }
    else if (buttonThatWasClicked == fTrainButton.get())
    {
        //[UserButtonCode_fTrainButton] -- add your button handler code here..
       if (buttonThatWasClicked->getToggleState())
       {
          this->ShowContents(kTrainingView);
       }
        //[/UserButtonCode_fTrainButton]
    }

    //[UserbuttonClicked_Post]
    //[/UserbuttonClicked_Post]
}



//[MiscUserCode] You can add your own definitions of your custom methods or any other code here...

void MainView::handleCommandMessage(int commandId)
{
   switch (commandId)
   {
      case Training::kTrainingDone:
      fSortButton->setToggleState(true, dontSendNotification);
      this->ShowContents(kFileListView);
      break;

      case Training::kSortFileAdded:
      for (auto& content : fContents)
      {
         if (content)
         {
            content->postCommandMessage(Training::kSortFileAdded);
         }
      }
      break;
   }
}

ContentView* MainView::Contents(ContentIds contentId) const
{
   return reinterpret_cast<ContentView*>(fContents[contentId].get());
}

void MainView::PrepareToLeaveView()
{
   auto view = this->Contents(fContentId);
   if (nullptr != view)
   {
      view->LeavingView();
   }
}

void MainView::SendSortFileAdded() const
{
   this->Contents(fContentId)->postCommandMessage(Training::kSortFileAdded);
}


void MainView::ShowContents(ContentIds contentId)
{
   this->PrepareToLeaveView();

   ContentView* contents = this->Contents(contentId);
   if (nullptr == contents)
   {
      switch (contentId)
      {
         case kFileListView:
         fContents[contentId].reset(new FileListView());
         break;

         case kTrainingView:
         fContents[contentId].reset(new TrainingView());
         break;

         case kSettingsView:
         fContents[contentId].reset(new SettingsView());
         break;
      }
      contents = reinterpret_cast<ContentView*>(fContents[contentId].get());
      contents->SetMainView(this);
      fContentId = contentId;
   }
   fContentView->removeAllChildren();
   fContentView->addAndMakeVisible(contents);
   contents->setFocusContainer(true);
   contents->setSize(fContentView->getWidth(), fContentView->getHeight());
}


//[/MiscUserCode]


//==============================================================================
#if 0
/*  -- Projucer information section --

    This is where the Projucer stores the metadata that describe this GUI layout, so
    make changes in here at your peril!

BEGIN_JUCER_METADATA

<JUCER_COMPONENT documentType="Component" className="MainView" componentName=""
                 parentClasses="public Component" constructorParams="" variableInitialisers=""
                 snapPixels="8" snapActive="1" snapShown="1" overlayOpacity="0.330"
                 fixedSize="0" initialWidth="830" initialHeight="700">
  <BACKGROUND backgroundColour="0">
    <IMAGE pos="0 0 100% 100%" resource="BinaryData::background_png" opacity="1.0"
           mode="0"/>
    <IMAGE pos="31 17 190 64" resource="BinaryData::logovibrary_png" opacity="1.0"
           mode="1"/>
  </BACKGROUND>
  <GENERICCOMPONENT name="content view" id="6cffe5d012f70cda" memberName="fContentView"
                    virtualName="" explicitFocusOrder="0" pos="20 90 40M 106M" class="Component"
                    params=""/>
  <IMAGEBUTTON name="sort button" id="8705f3f5e86894bd" memberName="fSortButton"
               virtualName="" explicitFocusOrder="0" pos="-14r 26 38 38" posRelativeX="b2265269ccfc4877"
               tooltip="Sort" buttonText="Sort" connectedEdges="0" needsCallback="1"
               radioGroupId="1" keepProportions="1" resourceNormal="naviconfolder_png"
               opacityNormal="1.0" colourNormal="0" resourceOver="" opacityOver="1.0"
               colourOver="0" resourceDown="naviconfolderselected_png" opacityDown="1.0"
               colourDown="0"/>
  <IMAGEBUTTON name="settings button" id="1b73d6074de0f8d3" memberName="fSettingsButton"
               virtualName="" explicitFocusOrder="0" pos="28Rr 26 38 38" tooltip="Settings"
               buttonText="" connectedEdges="0" needsCallback="1" radioGroupId="1"
               keepProportions="1" resourceNormal="naviconsettings_png" opacityNormal="1.0"
               colourNormal="0" resourceOver="" opacityOver="1.0" colourOver="0"
               resourceDown="naviconsettingsselected_png" opacityDown="1.0"
               colourDown="0"/>
  <IMAGEBUTTON name="train button" id="b2265269ccfc4877" memberName="fTrainButton"
               virtualName="" explicitFocusOrder="0" pos="-14r 26 38 38" posRelativeX="1b73d6074de0f8d3"
               tooltip="Train" buttonText="" connectedEdges="0" needsCallback="1"
               radioGroupId="1" keepProportions="1" resourceNormal="navicontrain_png"
               opacityNormal="1.0" colourNormal="0" resourceOver="" opacityOver="1.0"
               colourOver="0" resourceDown="navicontrainselected_png" opacityDown="1.0"
               colourDown="0"/>
</JUCER_COMPONENT>

END_JUCER_METADATA
*/
#endif

//==============================================================================
// Binary resources - be careful not to edit any of these sections!

// JUCER_RESOURCE: naviconfolder_png, 450, "../Resources/images/nav-icon-folder.png"
static const unsigned char resource_MainView_naviconfolder_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,158,0,0,0,158,8,3,0,0,0,244,91,67,73,0,0,0,51,80,76,84,69,255,255,255,102,102,102,
102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,34,191,88,8,0,0,0,17,
116,82,78,83,0,48,64,96,128,112,175,255,207,16,223,143,191,239,80,32,159,95,106,35,95,0,0,1,45,73,68,65,84,120,218,237,219,91,110,132,64,12,5,81,99,30,238,134,110,96,255,171,157,13,68,201,24,132,177,162,
58,43,40,89,186,159,22,0,0,0,0,0,0,32,187,65,199,233,71,179,170,188,108,92,236,87,101,174,47,198,173,246,183,237,165,192,218,236,43,125,151,23,12,221,190,53,167,174,51,219,36,88,237,230,49,74,172,102,
46,253,144,72,187,57,53,137,84,204,75,35,119,97,110,167,196,217,204,175,70,14,195,111,151,48,118,193,148,59,239,148,40,106,23,52,242,254,111,94,111,78,211,94,175,230,5,57,53,52,207,111,169,169,243,172,
107,104,158,223,152,59,207,198,220,121,125,72,157,103,37,119,158,141,185,243,214,220,121,166,185,243,182,220,121,37,119,158,145,119,135,146,71,30,121,228,145,71,30,121,228,145,71,30,121,228,145,71,30,
121,228,145,71,30,121,228,145,71,30,121,228,145,71,30,121,228,145,71,158,223,33,14,22,78,82,231,117,241,104,22,108,17,143,205,130,205,226,49,196,47,195,165,88,168,83,124,246,248,227,229,29,199,116,229,
149,41,76,17,191,161,135,213,85,9,238,243,215,249,29,197,2,220,120,177,156,187,61,172,233,221,7,216,231,172,167,202,109,170,243,244,0,213,67,0,0,0,0,0,0,128,228,62,253,189,14,89,29,246,204,222,0,0,0,0,
73,69,78,68,174,66,96,130,0,0};

const char* MainView::naviconfolder_png = (const char*) resource_MainView_naviconfolder_png;
const int MainView::naviconfolder_pngSize = 450;

// JUCER_RESOURCE: naviconfolderselected_png, 450, "../Resources/images/nav-icon-folder-selected.png"
static const unsigned char resource_MainView_naviconfolderselected_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,158,0,0,0,158,8,3,0,0,0,244,91,67,73,0,0,0,51,80,76,84,69,255,255,255,80,
116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,56,66,120,174,0,0,0,17,116,
82,78,83,0,48,64,96,128,112,175,255,207,16,223,143,191,239,80,32,159,95,106,35,95,0,0,1,45,73,68,65,84,120,218,237,219,91,110,132,64,12,5,81,99,30,238,134,110,96,255,171,157,13,68,201,24,132,177,162,58,
43,40,89,186,159,22,0,0,0,0,0,0,32,187,65,199,233,71,179,170,188,108,92,236,87,101,174,47,198,173,246,183,237,165,192,218,236,43,125,151,23,12,221,190,53,167,174,51,219,36,88,237,230,49,74,172,102,46,
253,144,72,187,57,53,137,84,204,75,35,119,97,110,167,196,217,204,175,70,14,195,111,151,48,118,193,148,59,239,148,40,106,23,52,242,254,111,94,111,78,211,94,175,230,5,57,53,52,207,111,169,169,243,172,107,
104,158,223,152,59,207,198,220,121,125,72,157,103,37,119,158,141,185,243,214,220,121,166,185,243,182,220,121,37,119,158,145,119,135,146,71,30,121,228,145,71,30,121,228,145,71,30,121,228,145,71,30,121,
228,145,71,30,121,228,145,71,30,121,228,145,71,30,121,228,145,71,158,223,33,14,22,78,82,231,117,241,104,22,108,17,143,205,130,205,226,49,196,47,195,165,88,168,83,124,246,248,227,229,29,199,116,229,149,
41,76,17,191,161,135,213,85,9,238,243,215,249,29,197,2,220,120,177,156,187,61,172,233,221,7,216,231,172,167,202,109,170,243,244,0,213,67,0,0,0,0,0,0,128,228,62,253,189,14,89,29,246,204,222,0,0,0,0,73,
69,78,68,174,66,96,130,0,0};

const char* MainView::naviconfolderselected_png = (const char*) resource_MainView_naviconfolderselected_png;
const int MainView::naviconfolderselected_pngSize = 450;

// JUCER_RESOURCE: navicontrainselected_png, 2358, "../Resources/images/nav-icon-train-selected.png"
static const unsigned char resource_MainView_navicontrainselected_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,158,0,0,0,158,8,6,0,0,0,195,133,179,123,0,0,8,253,73,68,65,84,120,1,237,
221,3,144,35,77,31,199,241,119,121,182,109,219,182,237,123,108,219,182,109,219,182,109,219,182,109,239,230,174,223,111,93,165,182,242,98,146,76,111,111,79,146,249,85,213,167,252,244,63,55,249,86,158,100,
167,103,230,95,198,24,241,78,116,16,68,225,137,194,19,81,120,162,240,68,20,158,40,60,17,133,39,10,79,68,225,137,194,147,252,166,240,22,239,254,65,35,108,137,171,241,58,222,72,186,28,235,162,161,131,25,
35,113,16,238,195,155,73,143,226,104,76,118,176,126,57,22,227,108,188,154,50,227,22,236,132,150,10,47,183,162,219,28,111,195,164,241,22,230,88,174,223,20,39,161,34,195,140,75,208,197,114,198,24,60,11,
147,198,103,216,11,165,10,47,218,224,234,225,76,152,44,85,226,88,52,10,49,99,28,94,14,49,227,19,44,11,177,126,25,118,199,47,33,102,220,140,86,10,47,154,232,138,112,5,140,133,243,179,156,209,30,159,91,
172,255,23,134,103,57,227,40,24,11,143,161,142,194,243,31,222,54,48,150,42,48,54,139,25,183,193,88,122,5,117,51,172,223,5,191,195,88,58,65,225,249,141,174,45,190,134,169,134,39,80,55,205,140,245,97,170,
233,192,16,159,216,54,254,64,23,133,231,47,188,185,48,14,76,75,19,197,147,14,214,255,12,245,3,102,116,71,133,131,25,155,40,60,127,225,29,2,227,192,49,1,235,119,196,111,14,214,79,160,95,154,95,226,198,
129,43,20,158,7,1,223,189,108,221,155,230,151,172,113,100,114,192,140,179,96,28,120,13,197,10,207,79,120,183,194,56,112,79,192,250,99,61,132,119,38,140,3,175,198,52,60,133,167,240,20,158,194,83,120,10,
79,225,41,60,133,167,240,20,158,194,83,120,15,7,172,63,30,198,145,169,1,51,206,131,113,224,109,133,231,47,188,123,97,146,126,195,59,120,17,207,133,240,60,206,12,88,127,16,158,15,185,94,208,140,225,1,51,
246,117,48,227,101,220,137,18,133,231,103,87,202,145,216,23,211,209,17,229,182,107,69,249,239,112,176,70,49,202,195,172,165,240,68,20,158,40,60,81,120,34,10,79,20,158,136,194,19,133,39,162,240,68,225,
137,40,60,81,120,34,249,124,195,158,254,56,16,55,225,230,152,185,30,219,160,131,194,243,23,92,27,28,135,223,96,98,238,27,236,131,178,216,135,199,65,104,136,70,105,52,70,29,203,181,91,226,93,5,247,63,46,
170,230,157,183,26,163,81,128,250,145,135,151,225,38,52,123,227,30,124,134,47,240,121,128,47,48,201,114,206,241,138,44,208,246,150,199,116,109,124,153,230,189,250,24,183,98,103,52,117,29,158,109,112,45,
112,88,200,27,233,252,131,142,22,179,250,225,143,192,117,229,27,180,177,56,174,83,67,204,120,15,123,161,65,100,225,49,188,19,94,135,9,233,93,148,91,204,59,8,70,210,90,108,113,92,7,99,53,76,8,143,160,174,
247,240,24,90,130,235,97,44,188,104,57,243,38,24,73,107,107,139,227,218,23,9,139,89,39,69,17,222,193,48,150,158,179,156,121,11,140,115,10,175,55,42,97,44,108,229,45,60,134,117,192,79,17,132,119,51,76,
78,81,120,31,161,177,175,240,118,130,81,120,10,47,105,169,175,240,110,85,120,41,20,222,225,190,194,123,83,225,165,80,120,103,250,10,239,45,133,151,66,225,157,225,43,188,103,21,94,10,133,119,138,175,240,
206,83,120,41,20,222,110,190,194,155,19,243,240,86,99,3,140,195,248,106,24,139,195,243,60,188,74,12,243,21,94,41,158,138,249,39,94,31,71,155,43,214,207,243,240,110,242,125,230,98,50,126,142,113,120,67,
28,133,183,105,30,135,247,37,6,70,177,73,96,179,216,134,167,240,86,97,74,148,219,162,118,199,223,177,10,79,225,253,236,226,113,86,46,14,222,24,156,31,98,79,222,91,57,21,158,194,235,11,147,133,79,113,60,
6,250,223,8,154,121,83,232,60,236,135,253,177,223,255,177,63,182,168,186,147,165,194,219,56,7,194,107,129,125,177,127,192,251,181,39,38,163,113,12,46,246,201,223,240,146,183,204,173,139,122,168,155,193,
214,254,195,243,79,225,249,9,175,21,94,199,167,248,36,131,239,21,158,43,10,175,29,254,132,241,73,225,41,188,182,248,89,225,41,60,133,151,131,92,199,209,21,115,48,55,141,9,40,82,120,57,179,73,160,65,134,
247,108,6,218,68,27,94,240,129,62,16,79,224,55,152,12,94,211,39,158,189,136,254,142,247,35,30,196,78,104,154,11,23,116,207,193,71,48,33,60,175,240,114,110,91,84,34,228,35,233,199,68,121,65,247,92,84,216,
159,171,85,120,121,188,31,239,7,244,139,226,186,218,126,248,62,166,155,4,20,30,240,1,218,251,14,239,166,152,239,199,83,120,192,25,62,47,232,30,141,132,194,83,120,248,13,61,125,133,119,50,140,194,83,120,
73,219,249,10,239,105,133,167,240,82,156,224,43,188,183,21,158,194,75,113,70,65,135,167,240,116,39,129,199,22,43,188,161,10,175,202,177,190,194,219,167,192,195,91,133,39,176,63,230,98,104,210,66,28,130,
103,49,80,225,85,89,215,87,120,3,80,81,160,225,221,139,81,25,94,71,17,74,20,222,26,63,162,189,207,63,32,159,94,96,225,189,137,45,81,28,234,117,41,188,253,124,159,185,168,135,167,11,36,188,55,208,44,244,
107,82,120,55,161,52,138,77,2,35,241,93,158,135,247,149,213,201,110,133,247,62,218,70,185,45,170,43,206,199,234,60,220,22,245,75,213,247,57,133,183,10,38,11,127,226,4,180,205,149,39,251,204,194,181,248,
44,143,194,59,119,205,218,10,175,79,134,79,188,4,222,199,165,24,150,171,91,223,155,96,104,26,195,208,55,71,182,190,79,95,179,182,194,171,147,225,253,26,136,186,186,216,199,141,23,80,170,240,124,83,120,
71,37,215,85,120,94,41,188,37,10,47,10,10,111,180,194,139,130,194,27,83,131,175,179,21,126,82,120,233,185,252,53,187,62,46,194,99,25,92,144,3,191,106,23,215,96,120,163,80,145,71,191,106,59,225,97,60,22,
224,97,156,137,229,40,207,165,11,186,151,225,77,24,32,47,46,232,62,176,6,195,219,36,15,31,27,106,178,244,4,102,68,26,94,242,254,110,39,229,233,41,179,7,106,48,188,235,10,252,57,23,149,216,63,202,240,206,
202,227,77,2,9,12,173,129,232,186,224,247,152,60,96,101,239,40,46,232,94,90,0,219,162,14,169,129,240,54,130,137,73,120,21,24,239,243,186,218,38,120,179,0,194,251,8,29,29,255,154,125,45,54,225,1,143,162,
142,175,240,54,41,160,173,239,143,161,142,131,232,106,225,158,152,62,203,108,182,175,240,46,47,152,240,128,203,29,132,119,30,76,76,195,219,203,87,120,175,21,84,120,192,93,232,107,121,150,226,58,152,24,
135,119,154,30,148,92,61,63,97,55,212,10,241,72,173,79,160,7,37,235,19,207,137,151,176,31,38,160,39,218,163,29,122,97,12,118,193,227,48,214,244,137,167,239,120,25,252,131,223,146,254,129,249,31,10,111,
111,95,225,109,26,125,120,113,164,95,181,45,241,190,194,83,120,120,6,245,125,158,185,88,22,65,120,183,192,72,90,219,228,211,153,11,219,248,206,129,177,240,162,229,188,27,97,36,173,173,44,119,167,36,44,
102,237,19,229,238,20,155,187,131,126,138,6,22,243,182,133,145,180,166,89,94,152,111,66,168,196,129,40,138,122,63,222,10,139,191,237,245,180,152,211,14,63,6,174,41,31,162,161,197,113,157,29,98,198,83,
152,153,75,59,144,155,98,67,92,130,39,178,48,218,114,206,222,48,255,67,42,177,182,229,49,93,128,39,241,68,128,71,113,54,86,70,190,3,217,65,168,69,150,255,93,41,46,130,145,42,171,176,145,239,247,34,250,
240,162,9,119,71,124,1,19,115,111,99,93,79,199,93,225,37,227,107,131,69,216,58,134,182,196,212,112,223,233,20,158,136,194,19,133,39,10,79,68,225,137,194,19,81,120,162,240,68,20,158,40,60,17,133,39,10,
207,110,23,5,74,163,152,45,10,239,140,164,141,49,5,131,209,23,189,67,232,131,78,105,118,85,247,9,185,94,208,140,122,65,155,27,28,204,232,135,62,40,82,120,126,226,187,27,38,197,106,36,80,25,210,93,1,235,
143,65,165,3,9,76,74,243,228,203,132,131,245,95,69,177,194,243,19,222,173,48,14,220,23,176,254,56,24,71,166,216,220,208,50,132,215,21,94,254,133,119,79,192,250,99,97,28,153,28,48,227,76,24,7,244,137,231,
133,194,83,120,30,40,60,133,167,240,20,158,194,187,13,198,129,123,11,224,199,197,107,254,194,83,120,55,192,56,112,71,192,250,163,97,28,153,24,48,227,20,24,7,94,244,23,158,194,219,19,198,129,3,3,214,111,
237,232,57,100,149,232,25,48,99,29,24,7,206,243,119,236,21,222,76,24,7,38,164,153,241,160,131,245,223,71,157,128,245,59,227,79,7,51,214,83,120,254,194,107,130,247,97,170,225,86,148,165,153,49,11,171,107,
242,62,117,169,55,59,178,244,3,90,43,60,191,241,173,11,99,233,79,12,170,225,219,237,62,142,242,44,46,70,255,9,198,210,1,218,36,16,1,171,135,247,1,199,132,184,9,209,107,22,235,127,131,94,89,206,216,13,
198,194,13,40,81,120,62,217,223,57,234,87,108,141,226,16,235,119,195,3,33,102,188,130,145,22,207,132,251,34,196,140,211,81,166,109,81,209,199,183,0,143,103,241,191,190,145,150,235,215,198,94,25,238,203,
247,7,142,65,51,203,25,189,113,103,134,239,149,175,98,35,237,199,203,173,248,74,49,31,251,226,244,20,123,97,42,74,28,204,232,142,141,112,4,206,72,58,6,91,162,191,163,127,199,24,236,140,83,113,58,206,192,
65,88,134,58,218,8,154,151,68,225,137,40,60,81,120,162,240,68,20,158,40,60,17,133,39,10,79,68,225,137,194,19,81,120,162,240,68,254,13,28,109,175,218,42,63,78,178,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* MainView::navicontrainselected_png = (const char*) resource_MainView_navicontrainselected_png;
const int MainView::navicontrainselected_pngSize = 2358;

// JUCER_RESOURCE: navicontrain_png, 2164, "../Resources/images/nav-icon-train.png"
static const unsigned char resource_MainView_navicontrain_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,158,0,0,0,158,8,4,0,0,0,105,140,123,240,0,0,8,59,73,68,65,84,120,218,237,157,121,
112,21,85,22,135,65,17,53,81,89,44,65,22,65,102,44,37,193,21,167,144,176,56,136,43,140,11,130,99,41,162,184,125,8,51,150,104,97,25,150,24,164,198,25,197,165,112,73,226,2,83,148,22,86,89,110,193,80,163,
130,165,133,64,92,0,81,19,8,168,204,48,128,56,67,169,184,100,96,6,18,120,83,60,69,187,59,125,111,247,187,253,250,117,247,203,249,157,127,207,121,125,239,87,253,186,251,158,123,238,189,109,218,136,68,34,
145,72,36,18,137,68,34,145,72,36,210,138,14,76,224,121,214,178,142,117,44,96,44,71,121,70,12,96,38,111,210,64,3,203,184,159,97,158,254,237,25,197,147,212,165,35,94,101,50,93,242,5,221,205,108,32,101,179,
245,140,208,248,119,102,14,123,28,17,207,208,71,19,81,194,74,135,255,86,74,105,151,116,112,133,84,57,186,245,163,53,241,0,29,92,35,6,243,177,107,196,102,198,184,250,31,194,157,124,239,26,177,144,174,73,
70,215,150,231,92,187,245,163,205,115,137,232,201,23,74,255,255,242,27,151,136,251,52,87,88,206,225,201,133,55,73,211,177,20,123,24,212,34,98,145,54,226,19,10,28,254,125,248,143,54,226,225,164,162,235,
206,191,181,29,75,81,107,135,193,56,15,255,20,229,25,220,217,251,109,167,238,89,25,103,120,35,61,81,164,56,215,134,226,93,79,255,173,28,97,137,56,161,197,139,165,165,221,144,76,120,179,124,192,155,109,
241,239,69,163,167,127,51,253,108,239,113,239,43,60,151,76,120,139,124,116,109,137,237,61,155,242,97,150,111,62,158,240,225,95,207,65,73,132,87,227,163,107,139,45,254,131,50,134,87,229,195,191,78,224,
9,60,129,39,240,4,158,192,107,229,240,150,90,252,135,248,130,55,220,18,49,215,135,255,134,100,194,91,146,110,124,35,159,178,134,85,174,182,154,42,139,255,105,172,86,248,89,35,44,201,1,166,123,70,124,204,
107,28,156,196,140,202,95,152,206,121,244,162,189,206,43,216,53,60,61,14,162,125,176,107,136,68,34,145,72,36,18,137,68,34,145,72,36,10,50,120,63,153,114,170,89,24,145,189,196,36,142,75,38,184,110,60,232,
99,46,54,108,219,206,52,14,137,30,198,81,116,176,89,71,93,33,13,93,248,44,114,112,7,108,190,182,95,133,116,180,245,235,136,236,98,235,195,84,22,179,149,109,124,97,177,109,252,86,19,243,80,108,208,237,
183,91,53,45,189,138,47,109,189,250,39,53,220,78,231,108,128,59,134,63,41,74,118,118,211,75,25,213,143,157,177,130,183,157,110,202,182,14,119,141,248,156,82,142,12,134,174,55,107,149,13,250,76,157,37,
102,102,172,208,237,183,81,202,182,158,206,62,69,204,59,206,162,182,76,208,29,204,75,154,230,172,209,68,86,199,14,222,68,101,91,139,105,86,70,205,49,135,119,143,182,57,171,52,145,175,38,8,94,95,154,52,
113,183,152,161,59,142,111,141,225,45,204,27,120,155,232,104,2,111,178,71,115,90,7,188,20,163,77,224,213,8,188,180,221,107,2,175,65,224,165,173,202,4,222,122,129,151,182,74,19,120,43,5,94,218,30,53,129,
55,87,224,165,109,138,9,188,17,17,195,219,199,181,12,102,136,214,6,113,111,200,240,154,56,211,4,94,59,222,139,248,206,43,242,209,202,113,33,195,171,54,29,97,12,227,187,72,225,157,225,163,141,55,134,10,
239,75,78,53,31,160,221,212,170,225,237,229,156,96,121,149,59,249,95,43,133,247,93,22,22,95,81,194,60,215,140,222,250,60,129,87,236,226,189,133,135,2,252,97,91,164,68,127,199,12,202,152,241,179,149,129,
186,234,50,135,240,174,15,12,239,24,166,91,122,86,198,93,12,51,74,6,100,45,113,31,2,60,218,82,64,33,5,14,155,24,20,94,252,102,206,194,128,215,149,181,108,97,179,195,190,22,120,126,224,245,96,87,24,35,
140,214,1,175,187,246,171,83,224,229,41,60,126,197,8,70,218,108,104,110,223,182,97,193,227,72,71,207,206,87,79,83,102,142,173,59,229,212,186,20,78,212,231,199,157,231,242,157,183,131,183,153,156,133,105,
111,70,176,73,209,156,213,121,2,175,175,98,234,177,158,146,96,232,70,106,118,144,88,149,55,240,84,99,219,111,172,27,66,100,138,174,159,246,43,42,255,225,165,248,59,61,77,225,85,71,156,207,139,30,158,217,
12,70,155,54,12,212,148,33,180,30,120,141,156,104,2,239,145,200,231,48,226,0,47,197,31,77,224,189,47,240,140,183,243,106,177,105,96,107,133,87,41,240,114,92,49,176,60,114,120,253,99,1,239,1,19,120,211,
114,12,111,47,181,148,49,146,254,244,231,82,102,177,210,158,8,143,12,222,88,19,120,167,120,236,79,151,93,120,75,56,203,241,27,109,237,59,83,68,4,111,135,225,103,50,21,57,130,215,192,4,239,253,79,34,130,
55,195,116,132,81,168,253,92,201,22,188,117,28,237,51,187,147,123,120,213,1,182,12,102,0,95,133,12,239,95,126,7,223,17,192,219,72,247,160,73,208,121,138,82,251,108,164,164,190,119,62,233,34,129,183,215,
197,127,23,15,7,68,247,211,207,95,200,11,108,13,5,222,211,25,37,101,195,129,87,228,184,243,154,217,200,179,70,181,81,202,75,116,74,127,66,252,98,103,82,156,133,52,252,121,49,128,119,184,163,95,167,6,88,
186,146,195,9,160,15,51,121,28,203,236,153,221,238,203,112,46,69,224,89,236,114,129,103,14,111,160,192,51,135,151,209,236,20,93,61,150,115,197,19,30,157,24,199,124,150,59,236,175,129,223,182,163,50,106,
197,89,62,246,130,55,121,219,246,102,169,173,95,75,169,226,10,221,166,137,153,52,122,140,98,45,80,240,73,239,242,140,218,113,67,104,75,70,221,252,107,57,63,40,184,2,230,132,56,60,123,43,163,182,188,152,
227,117,24,77,148,5,131,247,68,168,137,129,102,123,186,83,219,18,175,131,67,194,73,12,76,53,71,55,58,244,148,212,44,223,109,25,31,201,10,160,61,12,49,125,77,52,132,14,111,147,122,147,7,199,155,182,62,
162,229,83,203,140,78,18,242,124,64,103,39,37,229,227,152,35,14,101,113,132,107,207,46,50,129,183,32,71,115,24,11,60,91,50,55,48,186,32,240,74,77,224,213,231,8,94,138,215,41,214,140,43,94,204,2,186,32,
240,30,55,129,151,203,197,202,223,50,133,67,93,126,231,38,54,39,115,177,114,125,14,225,237,183,143,152,193,80,78,164,39,61,56,137,18,238,96,69,44,214,219,62,30,231,103,158,221,118,211,72,35,187,99,180,
88,217,228,91,207,115,85,87,107,89,233,109,244,182,237,194,70,129,199,7,134,91,194,49,198,24,94,252,182,67,154,148,211,17,70,250,135,159,210,52,71,183,17,215,43,177,131,119,139,38,171,162,174,128,157,
22,44,171,162,174,15,221,162,222,95,142,63,196,14,222,185,154,137,125,213,214,12,229,129,143,34,225,247,202,47,62,101,181,46,61,216,17,43,116,255,80,31,134,205,69,174,17,239,113,65,118,210,161,157,185,
142,103,168,109,97,154,57,8,166,198,8,93,19,87,105,90,122,9,239,218,122,181,140,39,185,50,75,153,100,205,101,53,55,53,237,152,31,19,116,123,25,111,218,139,40,167,129,110,99,91,228,232,54,24,21,39,198,
2,95,55,46,99,98,100,54,129,225,234,103,157,72,36,18,137,68,34,145,72,36,18,137,68,250,76,69,128,101,71,2,143,74,42,185,158,115,56,157,98,250,186,90,17,189,45,17,5,20,41,252,172,17,133,182,164,131,87,
68,63,138,18,121,44,53,111,252,148,18,218,71,51,77,10,123,221,226,95,162,244,250,197,154,173,167,14,81,161,249,229,3,254,117,201,60,77,190,198,71,174,237,77,139,255,96,95,217,57,203,238,177,218,194,203,
3,182,54,127,225,45,182,248,15,242,5,111,152,37,162,202,135,127,157,192,19,120,2,79,224,229,4,222,34,63,155,50,132,254,194,168,79,38,188,151,125,116,237,111,22,255,129,190,224,157,109,137,120,212,135,
255,154,100,194,187,43,179,21,64,28,235,99,101,89,147,181,70,129,171,125,92,97,110,50,199,24,23,248,232,218,80,91,196,219,158,254,27,173,149,243,28,239,99,223,228,107,146,9,175,147,71,117,95,138,26,251,
185,179,92,168,60,115,81,81,99,231,185,73,221,55,28,155,212,241,237,88,109,199,118,113,90,139,8,125,33,239,10,103,253,8,221,60,254,234,119,39,57,61,48,71,211,177,217,46,254,157,53,69,228,219,57,201,37,
98,138,230,10,47,219,183,83,74,30,62,247,90,169,31,152,232,254,22,228,215,188,229,26,241,9,3,20,87,24,173,168,135,169,136,193,97,212,129,241,93,210,98,65,192,10,21,136,180,255,97,148,58,106,251,118,50,
91,183,97,18,125,121,205,241,180,172,211,215,69,37,9,95,59,46,102,58,21,105,43,101,184,247,159,137,19,24,207,159,211,25,193,217,76,224,100,31,215,40,225,118,30,163,130,74,102,50,198,104,169,157,72,36,
18,137,68,34,145,72,36,18,137,68,34,81,102,250,63,80,255,33,2,204,68,116,231,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* MainView::navicontrain_png = (const char*) resource_MainView_navicontrain_png;
const int MainView::navicontrain_pngSize = 2164;

// JUCER_RESOURCE: naviconsettings_png, 1266, "../Resources/images/nav-icon-settings.png"
static const unsigned char resource_MainView_naviconsettings_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,158,0,0,0,158,8,3,0,0,0,244,91,67,73,0,0,0,51,80,76,84,69,255,255,255,102,102,
102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,34,191,88,8,0,0,
0,17,116,82,78,83,0,80,143,207,255,32,48,112,191,128,96,175,239,16,223,64,159,53,114,210,151,0,0,4,93,73,68,65,84,120,1,237,219,233,142,220,40,16,7,240,2,10,155,163,56,222,255,105,55,81,86,234,221,158,
161,13,226,95,61,29,201,191,207,145,229,118,160,46,24,186,253,53,110,183,219,237,118,51,214,177,167,143,116,156,129,127,139,244,113,124,202,194,255,146,66,159,164,24,91,249,191,18,189,80,172,167,247,105,
209,241,179,74,47,116,150,72,239,113,102,254,86,162,161,147,127,113,141,222,33,240,247,2,141,52,254,163,151,31,124,61,110,163,29,244,216,63,137,212,69,30,232,131,109,225,248,33,28,164,236,228,17,63,216,
22,255,19,11,169,106,60,210,167,126,77,53,164,201,243,136,148,185,31,147,61,41,226,161,56,216,22,207,228,36,61,142,71,234,112,91,60,115,77,61,178,76,132,230,204,67,182,144,14,203,67,238,50,6,61,36,181,
192,55,150,227,47,173,21,250,205,240,11,162,31,89,198,36,68,211,132,95,176,164,228,96,4,79,90,24,32,147,154,202,251,140,102,205,178,173,146,30,203,219,34,237,139,199,40,178,108,43,144,248,22,18,125,117,
10,239,234,180,229,145,205,229,185,199,42,129,247,53,218,245,200,151,217,208,67,19,254,136,141,97,248,161,198,2,88,118,200,116,91,234,211,106,105,68,84,58,35,72,81,8,30,53,121,199,16,29,153,87,241,14,
96,98,192,11,138,205,226,39,44,189,34,172,201,21,218,210,89,87,198,151,195,83,36,136,126,69,80,121,153,228,216,60,253,225,91,204,162,151,213,34,47,18,219,232,89,179,162,179,61,188,240,146,58,74,81,169,
174,45,191,163,225,67,94,53,52,150,234,117,53,95,90,59,99,15,110,50,94,27,158,119,61,49,142,50,254,93,49,230,80,23,75,133,82,121,158,243,116,197,59,104,50,110,240,212,222,161,117,160,17,116,213,150,160,
189,249,81,209,53,101,130,214,169,37,204,63,9,252,126,22,213,200,158,42,21,144,163,41,73,192,5,111,199,246,191,135,96,75,162,226,120,138,129,60,239,208,234,14,44,226,255,35,170,21,26,1,176,223,106,1,116,
166,3,52,239,16,100,23,157,120,70,219,94,208,85,179,202,141,219,241,224,212,108,255,2,45,168,200,217,92,225,9,178,251,192,76,3,62,134,202,53,68,79,3,25,60,66,104,11,27,195,63,22,66,247,27,155,227,220,
140,85,229,186,14,19,67,223,41,224,30,184,79,103,109,51,149,156,28,118,241,5,254,202,78,117,119,226,103,42,161,205,176,85,103,215,70,95,62,184,31,232,109,243,116,170,77,158,223,251,245,70,166,70,191,125,
120,118,76,110,161,184,90,182,132,68,139,102,115,118,152,13,255,60,34,221,211,42,51,251,122,117,118,137,15,231,32,133,22,149,179,78,87,60,123,255,176,55,90,117,116,30,64,127,61,235,105,85,114,60,132,94,
123,141,214,120,43,60,6,223,185,141,86,152,204,99,26,113,207,211,180,18,43,143,233,100,141,205,56,167,157,115,145,221,0,190,98,9,200,81,3,190,222,203,200,94,15,95,45,71,200,205,65,181,94,163,193,91,81,
104,167,86,104,65,230,9,208,62,215,111,61,65,125,74,32,13,58,230,194,207,88,78,154,39,60,1,60,161,234,5,185,248,240,243,61,231,1,15,81,156,142,202,1,61,105,198,207,150,19,160,42,208,156,204,119,236,13,
17,248,185,134,43,192,197,167,112,42,36,7,110,241,169,156,169,37,208,8,83,235,68,210,210,37,135,63,207,69,254,98,251,131,167,225,110,241,90,97,200,49,154,86,225,119,9,6,218,212,226,115,161,63,238,229,
95,220,126,168,105,253,38,6,250,94,95,198,223,99,65,94,189,41,178,126,11,168,203,251,110,148,26,244,29,42,240,173,67,139,189,129,6,191,178,233,88,89,252,228,11,145,92,11,109,57,132,53,153,143,190,43,156,
233,83,94,207,241,87,226,105,87,103,136,68,71,23,220,190,152,175,180,230,107,206,242,148,80,28,109,59,25,192,29,143,172,130,253,243,141,202,251,114,249,118,82,220,105,91,227,109,114,126,63,103,151,66,
219,50,239,10,126,112,74,145,104,155,215,75,90,134,246,69,222,213,72,81,197,127,61,160,196,31,253,122,1,159,85,129,188,254,159,224,168,165,219,26,195,70,15,11,80,228,42,139,30,38,218,16,130,128,46,14,
2,27,161,52,187,10,72,141,145,217,169,77,248,145,192,87,236,228,130,79,63,20,151,155,155,107,96,234,220,42,192,59,101,102,160,25,193,113,121,158,207,19,31,196,79,172,82,45,173,94,127,143,12,143,203,243,
74,188,76,83,109,227,245,246,249,112,53,233,175,60,64,111,145,228,245,156,255,4,188,222,126,16,52,203,41,208,211,155,52,199,113,241,66,172,77,158,222,199,44,76,59,130,53,133,240,16,197,107,136,141,240,
16,165,191,228,243,160,143,36,181,167,131,110,183,219,237,118,187,221,64,254,1,208,100,157,191,87,216,242,122,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* MainView::naviconsettings_png = (const char*) resource_MainView_naviconsettings_png;
const int MainView::naviconsettings_pngSize = 1266;

// JUCER_RESOURCE: naviconsettingsselected_png, 1266, "../Resources/images/nav-icon-settings-selected.png"
static const unsigned char resource_MainView_naviconsettingsselected_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,158,0,0,0,158,8,3,0,0,0,244,91,67,73,0,0,0,51,80,76,84,69,255,255,255,
80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,80,116,221,56,66,120,174,0,0,0,17,116,
82,78,83,0,80,143,207,255,32,48,112,191,128,96,175,239,16,223,64,159,53,114,210,151,0,0,4,93,73,68,65,84,120,1,237,219,233,142,220,40,16,7,240,2,10,155,163,56,222,255,105,55,81,86,234,221,158,161,13,226,
95,61,29,201,191,207,145,229,118,160,46,24,186,253,53,110,183,219,237,118,51,214,177,167,143,116,156,129,127,139,244,113,124,202,194,255,146,66,159,164,24,91,249,191,18,189,80,172,167,247,105,209,241,
179,74,47,116,150,72,239,113,102,254,86,162,161,147,127,113,141,222,33,240,247,2,141,52,254,163,151,31,124,61,110,163,29,244,216,63,137,212,69,30,232,131,109,225,248,33,28,164,236,228,17,63,216,22,255,
19,11,169,106,60,210,167,126,77,53,164,201,243,136,148,185,31,147,61,41,226,161,56,216,22,207,228,36,61,142,71,234,112,91,60,115,77,61,178,76,132,230,204,67,182,144,14,203,67,238,50,6,61,36,181,192,55,
150,227,47,173,21,250,205,240,11,162,31,89,198,36,68,211,132,95,176,164,228,96,4,79,90,24,32,147,154,202,251,140,102,205,178,173,146,30,203,219,34,237,139,199,40,178,108,43,144,248,22,18,125,117,10,239,
234,180,229,145,205,229,185,199,42,129,247,53,218,245,200,151,217,208,67,19,254,136,141,97,248,161,198,2,88,118,200,116,91,234,211,106,105,68,84,58,35,72,81,8,30,53,121,199,16,29,153,87,241,14,96,98,192,
11,138,205,226,39,44,189,34,172,201,21,218,210,89,87,198,151,195,83,36,136,126,69,80,121,153,228,216,60,253,225,91,204,162,151,213,34,47,18,219,232,89,179,162,179,61,188,240,146,58,74,81,169,174,45,191,
163,225,67,94,53,52,150,234,117,53,95,90,59,99,15,110,50,94,27,158,119,61,49,142,50,254,93,49,230,80,23,75,133,82,121,158,243,116,197,59,104,50,110,240,212,222,161,117,160,17,116,213,150,160,189,249,81,
209,53,101,130,214,169,37,204,63,9,252,126,22,213,200,158,42,21,144,163,41,73,192,5,111,199,246,191,135,96,75,162,226,120,138,129,60,239,208,234,14,44,226,255,35,170,21,26,1,176,223,106,1,116,166,3,52,
239,16,100,23,157,120,70,219,94,208,85,179,202,141,219,241,224,212,108,255,2,45,168,200,217,92,225,9,178,251,192,76,3,62,134,202,53,68,79,3,25,60,66,104,11,27,195,63,22,66,247,27,155,227,220,140,85,229,
186,14,19,67,223,41,224,30,184,79,103,109,51,149,156,28,118,241,5,254,202,78,117,119,226,103,42,161,205,176,85,103,215,70,95,62,184,31,232,109,243,116,170,77,158,223,251,245,70,166,70,191,125,120,118,
76,110,161,184,90,182,132,68,139,102,115,118,152,13,255,60,34,221,211,42,51,251,122,117,118,137,15,231,32,133,22,149,179,78,87,60,123,255,176,55,90,117,116,30,64,127,61,235,105,85,114,60,132,94,123,141,
214,120,43,60,6,223,185,141,86,152,204,99,26,113,207,211,180,18,43,143,233,100,141,205,56,167,157,115,145,221,0,190,98,9,200,81,3,190,222,203,200,94,15,95,45,71,200,205,65,181,94,163,193,91,81,104,167,
86,104,65,230,9,208,62,215,111,61,65,125,74,32,13,58,230,194,207,88,78,154,39,60,1,60,161,234,5,185,248,240,243,61,231,1,15,81,156,142,202,1,61,105,198,207,150,19,160,42,208,156,204,119,236,13,17,248,
185,134,43,192,197,167,112,42,36,7,110,241,169,156,169,37,208,8,83,235,68,210,210,37,135,63,207,69,254,98,251,131,167,225,110,241,90,97,200,49,154,86,225,119,9,6,218,212,226,115,161,63,238,229,95,220,
126,168,105,253,38,6,250,94,95,198,223,99,65,94,189,41,178,126,11,168,203,251,110,148,26,244,29,42,240,173,67,139,189,129,6,191,178,233,88,89,252,228,11,145,92,11,109,57,132,53,153,143,190,43,156,233,
83,94,207,241,87,226,105,87,103,136,68,71,23,220,190,152,175,180,230,107,206,242,148,80,28,109,59,25,192,29,143,172,130,253,243,141,202,251,114,249,118,82,220,105,91,227,109,114,126,63,103,151,66,219,
50,239,10,126,112,74,145,104,155,215,75,90,134,246,69,222,213,72,81,197,127,61,160,196,31,253,122,1,159,85,129,188,254,159,224,168,165,219,26,195,70,15,11,80,228,42,139,30,38,218,16,130,128,46,14,2,27,
161,52,187,10,72,141,145,217,169,77,248,145,192,87,236,228,130,79,63,20,151,155,155,107,96,234,220,42,192,59,101,102,160,25,193,113,121,158,207,19,31,196,79,172,82,45,173,94,127,143,12,143,203,243,74,
188,76,83,109,227,245,246,249,112,53,233,175,60,64,111,145,228,245,156,255,4,188,222,126,16,52,203,41,208,211,155,52,199,113,241,66,172,77,158,222,199,44,76,59,130,53,133,240,16,197,107,136,141,240,16,
165,191,228,243,160,143,36,181,167,131,110,183,219,237,118,187,221,64,254,1,208,100,157,191,87,216,242,122,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* MainView::naviconsettingsselected_png = (const char*) resource_MainView_naviconsettingsselected_png;
const int MainView::naviconsettingsselected_pngSize = 1266;


//[EndFile] You can add extra defines here...
//[/EndFile]

